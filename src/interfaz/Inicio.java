/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import Arbol.GeneracionArbol;
import Graficas.GraficaPila;
import Graficas.GraficaTabla;
import LALR.Estados;
import LALR.GeneracionTabla;
import LALR.NodoCaso;
import LALR.OptimizacionLALR;
import LALR.Tabla;
import Repositorio.Guardado;
import gramaticaLEN.AnalizadorLexico;
import gramaticaLEN.SintaxLEN;
import hojas.NuevaHoja;
import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import pollitos.Lenguajes;
import pollitos.MisExpresiones;

/**
 *
 * @author luisGonzalez
 */
public class Inicio extends javax.swing.JFrame {

    //Estos arraylist lo mas probable es que sean temporales (BORRADOS CON EL TIEMPO)
    private Lenguajes elegido = null;
    private ArrayList<Lenguajes> listLenguajes = new ArrayList<>();

    private ArrayList<Estados> listEstados = new ArrayList<>();
    private ArrayList<NodoCaso> listCasos = new ArrayList<>();

    private GeneracionArbol creacionArbol = new GeneracionArbol();
    private GeneracionTabla creacionTabla = new GeneracionTabla();
    private Tabla tabla2 = new Tabla();
    private OptimizacionLALR lalr = new OptimizacionLALR();
    private Guardado repositorio = new Guardado();

    /*GRAFICAS*/
    private GraficaTabla gfTabla = new GraficaTabla();

    private NuevaHoja nueva = new NuevaHoja();
    String a = "\\n";
    private final String REPOSITORIO = "/home/luisitopapurey/Escritorio/Compiladores 2/Proyecto 1/Repositorio/";

    public Inicio() {
        initComponents();
        setLocationRelativeTo(null);
        ArrayList<String> archivos = new ArrayList<>();
        try {
            Files.walk(Paths.get(REPOSITORIO)).forEach(ruta -> {
                if (!Files.isDirectory(ruta)) {
                    archivos.add(ruta.toString());
                }
            });
        } catch (IOException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < archivos.size(); i++) {
            Lenguajes nuevo = repositorio.abrirLenguaje(archivos.get(i));
            listLenguajes.add(nuevo);
        }
        for (int i = 0; i < listLenguajes.size(); i++) {
            comboLen.addItem(listLenguajes.get(i).getDatos().getNombre());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbed = new javax.swing.JTabbedPane();
        comboLen = new javax.swing.JComboBox<>();
        txtLenguaje = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnTabla = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuNuevo = new javax.swing.JMenuItem();
        menuAbrir = new javax.swing.JMenuItem();
        menuGuardar = new javax.swing.JMenuItem();
        menuGuardar2 = new javax.swing.JMenuItem();
        menuSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        menuComp = new javax.swing.JMenuItem();
        menuCargar = new javax.swing.JMenuItem();
        menuBorrar = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        menuLARL = new javax.swing.JMenuItem();
        menuPila = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(tabbed, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 910, 570));

        getContentPane().add(comboLen, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 13, 238, -1));

        txtLenguaje.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        txtLenguaje.setText("Lenguaje seleccionado:");
        getContentPane().add(txtLenguaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 18, 134, -1));

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });
        getContentPane().add(btnConfirmar, new org.netbeans.lib.awtextra.AbsoluteConstraints(429, 12, 151, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 644, -1, -1));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(934, 561, 25, 11));

        btnTabla.setText("Generar Tabla");
        btnTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablaActionPerformed(evt);
            }
        });
        getContentPane().add(btnTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, 140, -1));

        jMenu1.setText("Archivo");

        menuNuevo.setText("Nuevo");
        menuNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(menuNuevo);

        menuAbrir.setText("Abrir");
        menuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(menuAbrir);

        menuGuardar.setText("Guardar");
        jMenu1.add(menuGuardar);

        menuGuardar2.setText("Guardar como");
        jMenu1.add(menuGuardar2);

        menuSalir.setText("Salir");
        menuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalirActionPerformed(evt);
            }
        });
        jMenu1.add(menuSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Lenguajes");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ejecutar");

        menuComp.setText("Compilar");
        jMenu3.add(menuComp);

        menuCargar.setText("Cargar lenguaje");
        menuCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCargarActionPerformed(evt);
            }
        });
        jMenu3.add(menuCargar);

        menuBorrar.setText("Borrar lenguaje");
        jMenu3.add(menuBorrar);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Ver");

        menuLARL.setText("LARL");
        jMenu4.add(menuLARL);

        menuPila.setText("Pila");
        jMenu4.add(menuPila);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
        File archivoNuevo;
        JFileChooser chooser = new JFileChooser();
        String seleccion = "Seleccione un archivo";
        chooser.setCurrentDirectory(new File("."));
        chooser.setDialogTitle(seleccion);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
            System.out.println("getSelectedFile(): " + chooser.getSelectedFile());
            archivoNuevo = new File(chooser.getSelectedFile().getAbsolutePath());
            FileReader reader = null;
            BufferedReader buffer = null;
            String texto = "";
            nueva.crearHoja(archivoNuevo, reader, buffer, texto, tabbed, elegido);
        }
    }//GEN-LAST:event_menuAbrirActionPerformed

    private void menuNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNuevoActionPerformed
        PanelHojas panel = new PanelHojas("", "", elegido);
        tabbed.addTab("Sin nombre", panel);
        tabbed.setTabComponentAt(tabbed.getTabCount() - 1, nueva.crearCabecera("Sin nombre", tabbed));
    }//GEN-LAST:event_menuNuevoActionPerformed

    private void menuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_menuSalirActionPerformed

    private void menuCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCargarActionPerformed
        File nuevoLenguaje;
        ProblemasLenguaje problemas = new ProblemasLenguaje(null, true);
        problemas.setVisible(true);
        JFileChooser chooser = new JFileChooser();
        String seleccion = "Seleccione un archivo .len";
        chooser.setCurrentDirectory(new File("."));
        chooser.setDialogTitle(seleccion);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
            System.out.println("getSelectedFile(): " + chooser.getSelectedFile());
            nuevoLenguaje = new File(chooser.getSelectedFile().getAbsolutePath());
            FileReader reader = null;
            BufferedReader buffer = null;
            String texto = "";
            try {
                reader = new FileReader(nuevoLenguaje.toString());
                buffer = new BufferedReader(reader);
                while (buffer.ready()) {
                    texto += buffer.readLine() + "\n";
                }
                AnalizadorLexico lexico = new AnalizadorLexico(new StringReader(texto));
                Lenguajes nuevo = new Lenguajes();
                try {
                    new SintaxLEN(lexico, nuevo.getListEstados(), nuevo.getListExpresiones(), nuevo.getListSimbolos(), nuevo).parse();
                    creacionArbol.agregarIdentificadorNodos(nuevo.getListExpresiones());
                    nuevo.setPrimero(creacionArbol.unirArboles(nuevo.getListExpresiones()));
                    nuevo.setUnico(new MisExpresiones("principal", nuevo.getPrimero(), ""));
                    creacionArbol.pruebaExpresion(nuevo.getUnico());
                    creacionTabla.creacionCasos(nuevo.getListEstados(), nuevo.getListCasos());
                    nuevo.setMiTabla(tabla2.creacionTabla(nuevo.getListCasos(), nuevo.getListSimbolos()));
                    lalr.buscarCasosIguales(nuevo.getListCasos(), nuevo.getMiTabla(), nuevo.getListSimbolos());
                    tabla2.mostrarTabla(nuevo.getMiTabla(), nuevo.getListCasos(), nuevo.getListSimbolos());
                    repositorio.guardarLenguaje(nuevo.getDatos().getNombre(), nuevo, REPOSITORIO);
                } catch (Exception ex) {
                    Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_menuCargarActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        int seleccionado = comboLen.getSelectedIndex();
        elegido = listLenguajes.get(seleccionado);
        System.out.println("seleccione el lenguaje: " + elegido.getDatos().getNombre());
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTablaActionPerformed
        if (elegido != null) {
            gfTabla.generarTablaHTML(elegido.getListSimbolos(), elegido.getMiTabla(), elegido.getListCasos());
        } else {
            JOptionPane.showMessageDialog(null, "Aun no has elegido ningun lenguaje a usar.");
        }
    }//GEN-LAST:event_btnTablaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnTabla;
    private javax.swing.JComboBox<String> comboLen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenuItem menuBorrar;
    private javax.swing.JMenuItem menuCargar;
    private javax.swing.JMenuItem menuComp;
    private javax.swing.JMenuItem menuGuardar;
    private javax.swing.JMenuItem menuGuardar2;
    private javax.swing.JMenuItem menuLARL;
    private javax.swing.JMenuItem menuNuevo;
    private javax.swing.JMenuItem menuPila;
    private javax.swing.JMenuItem menuSalir;
    private javax.swing.JTabbedPane tabbed;
    private javax.swing.JLabel txtLenguaje;
    // End of variables declaration//GEN-END:variables
}
